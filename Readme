# Trading_Competition_Bot

A Python-based trading bot designed to efficiently backtest and simulate trading strategies on an unknown number and type of stocks, built as a rapid solution for a trading competition completed within 24 hours.

## Table of Contents

- [Overview](#overview)
- [Features](#features)
- [Installation](#installation)
- [Usage](#usage)
- [Project Structure](#project-structure)
- [Contributing](#contributing)
- [License](#license)
- [Contact](#contact)

## Overview

This repository contains a flexible, competition-oriented trading bot crafted to handle:
- Multiple stock tickers (unknown in advance)
- Diverse data formats or sources
- Rapid strategy prototyping and backtesting

The bot was built within a 24-hour deadline for a competitive event, prioritizing adaptability and fast deployment.

## Features

- **Universal Stock Handling:** Accepts an arbitrary number of stock tickers and datasets.
- **Backtesting Engine:** Quickly evaluate strategies on historical price data.
- **Plug-and-Play Strategies:** Easily add or modify trading logic.
- **Pythonic Design:** Written in Python for readability and extensibility.

## Installation

1. **Clone the repository:**
    ```bash
    git clone https://github.com/Photonicnova101/Trading_Competition_Bot.git
    cd Trading_Competition_Bot
    ```

2. **Install dependencies:**
    ```bash
    pip install -r requirements.txt
    ```

## Usage

1. **Prepare your data:**
   - Place your stock data files (CSV or supported format) in the designated `data/` folder.

2. **Configure strategy:**
   - Edit the strategy file or implement your own in the `strategies/` directory.

3. **Run the backtester:**
    ```bash
    python main.py
    ```
   - Command-line arguments or configuration files may be supported for custom runs.

## Project Structure

```
Trading_Competition_Bot/
│
├── data/             # Place stock data files here
├── strategies/       # Trading strategy implementations
├── backtester.py     # Backtesting engine
├── main.py           # Entry point for the bot
├── requirements.txt  # Python dependencies
└── README.md
```

## Contributing

Contributions, suggestions, and improvements are welcome! Please open an issue or submit a pull request.

## License

[MIT License](LICENSE)

## Contact

For questions or feedback, please contact [Photonicnova101](https://github.com/Photonicnova101).
